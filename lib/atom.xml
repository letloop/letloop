<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>https://hyper.dev</id><title>hyper.dev</title><updated>2023-09-28T22:37:01.089359+00:00</updated><link href="https://hyper.dev" rel="alternate"/><generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator><subtitle>The easy, fine &amp; neat geek from another world!</subtitle><entry><id>https://hyper.dev/lib/letloop/unknown/</id><title>(import (letloop unknown))</title><updated>2023-09-28T22:37:01.089541+00:00</updated><content type="html">&lt;div id="root"&gt;
&lt;h2 id="import-letloop-unknown"&gt;&lt;code&gt;(import (letloop unknown))&lt;/code&gt;&lt;/h2&gt;
&lt;h3 id="protocol"&gt;Protocol&lt;/h3&gt;
&lt;h4 id="registration"&gt;Registration&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;The client compute a verifier based on a salt, identity, and password using the procedure &lt;code&gt;unknown-compute-verifier&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The client send to the server the salt, identity, and verifier;&lt;/li&gt;
&lt;li&gt;The server stores the triplet: identity, password, salt.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="authentication"&gt;Authentication&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;The client initiates authentication by sending its identifier;&lt;/li&gt;
&lt;li&gt;The server replies with the salt associated with that identifier;&lt;/li&gt;
&lt;li&gt;The client compute a value called &lt;code&gt;A&lt;/code&gt; and send it to the server;&lt;/li&gt;
&lt;li&gt;The server compute a value called &lt;code&gt;B&lt;/code&gt; and send it to the client;&lt;/li&gt;
&lt;li&gt;At this point, client, and server should have the same shared secret called &lt;code&gt;K&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;The server sends &lt;code&gt;M2&lt;/code&gt; to proove it knows &lt;code&gt;K&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The client sends &lt;code&gt;M1&lt;/code&gt; to proove it knows &lt;code&gt;K&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="make-unknown-client-verifier-parameter-salt-identity-password-bytevector"&gt;&lt;code&gt;(make-unknown-client-verifier parameter salt identity password) &amp;#8594; bytevector?&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Client, and server must use the same &lt;code&gt;PARAMETER&lt;/code&gt;. Returns a bytevector that must be sent to the server with &lt;code&gt;SALT&lt;/code&gt;, and &lt;code&gt;IDENTITY&lt;/code&gt; for registering the client.&lt;/p&gt;
&lt;h3 id="make-unknown-server-parameter-nonce-salt-identity-verifier"&gt;&lt;code&gt;(make-unknown-server parameter nonce salt identity verifier)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Return an object &lt;code&gt;unknown-server&lt;/code&gt;, that can be used to compute the objects necessary to authenticate a client.&lt;/p&gt;
&lt;h3 id="make-unknown-client-parameter-nonce-salt-identity-password"&gt;&lt;code&gt;(make-unknown-client parameter nonce salt identity password)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Return an object &lt;code&gt;unknown-client&lt;/code&gt;, that can be used to compute the objects necessary to authenticate with a server.&lt;/p&gt;
&lt;h3 id="unknown-server-a-server-a"&gt;&lt;code&gt;(unknown-server-A! server A)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Associate &lt;code&gt;A&lt;/code&gt; with the server. It is then possible to call &lt;code&gt;unknown-server-K&lt;/code&gt;, &lt;code&gt;unknown-server-M2&lt;/code&gt;, and &lt;code&gt;unknown-server-check-M1&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="unknown-client-b-client-b"&gt;&lt;code&gt;(unknown-client-B! client B)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Associate &lt;code&gt;B&lt;/code&gt; with the client. It is then possible to call &lt;code&gt;unknown-client-K&lt;/code&gt;, &lt;code&gt;unknown-client-M2&lt;/code&gt;, and &lt;code&gt;unknown-client-check-M1&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="unknown-server-k-server"&gt;&lt;code&gt;(unknown-server-K server)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Return the wanna be shared secret.&lt;/p&gt;
&lt;h3 id="unknown-server-m2-server"&gt;&lt;code&gt;(unknown-server-M2 server)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Return &lt;code&gt;M2&lt;/code&gt; that must be sent to the client.&lt;/p&gt;
&lt;h3 id="unknown-server-check-m1-server-m1"&gt;&lt;code&gt;(unknown-server-check-M1? server M1)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Verify that the value sent by the client &lt;code&gt;M1&lt;/code&gt; is valid.&lt;/p&gt;
&lt;h3 id="unknown-client-k-client"&gt;&lt;code&gt;(unknown-client-K client)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Return the wanna be shared secret.&lt;/p&gt;
&lt;h3 id="unknown-client-m1-client"&gt;&lt;code&gt;(unknown-client-M1 client)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Return &lt;code&gt;M2&lt;/code&gt; that must be sent to the client.&lt;/p&gt;
&lt;h3 id="unknown-client-check-m2-client-m2"&gt;&lt;code&gt;(unknown-client-check-M2? client M2)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Verify that the value sent by the server &lt;code&gt;M2&lt;/code&gt; is valid.&lt;/p&gt;
        &lt;/div&gt;
        </content><link href="https://hyper.dev/lib/letloop/unknown/" rel="alternate"/><summary>zzzz</summary><published>2023-09-29T00:00:00+00:00</published></entry></feed>